{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","FindMovie","addMovie","allMovies","useState","qwery","setQwery","isLoading","setIsLoading","setMovie","error","setError","alreadyExistError","setAlreadyExistError","searchMovie","a","query","fetch","then","res","json","catch","Response","Error","response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","disabled","length","classNames","onClick","preventDefault","find","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b21dd55.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return movie && (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = '8f351a4a';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\nconst noPosterURL = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  addMovie: (movie: Movie[]) => void,\n  allMovies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, allMovies }) => {\n  const [qwery, setQwery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [alreadyExistError, setAlreadyExistError] = useState(false);\n\n  const searchMovie = async () => {\n    setError(false);\n    setIsLoading(true);\n\n    try {\n      const response = await getMovie(qwery);\n\n      if ('Error' in response) {\n        setError(true);\n        setIsLoading(false);\n\n        return;\n      }\n\n      setMovie({\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster === 'N/A'\n          ? noPosterURL\n          : response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        imdbId: response.imdbID,\n      });\n    } catch (err) {\n      setError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  const addMovieHandler = () => {\n    setQwery('');\n    setMovie(null);\n\n    if (movie && allMovies.find(target => (\n      target.imdbId === movie.imdbId\n    ))) {\n      setAlreadyExistError(true);\n\n      return;\n    }\n\n    if (movie) {\n      addMovie([...allMovies, movie]);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={qwery}\n              onChange={(event) => {\n                setAlreadyExistError(false);\n                setError(false);\n                setQwery(event.target.value);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {alreadyExistError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              This movie is already in the list\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={qwery.length <= 0}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              onClick={(event) => {\n                event.preventDefault();\n                searchMovie();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieHandler}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie allMovies={movies} addMovie={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}